package com.dcits.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.11
 * 2019-12-01T15:14:40.916+08:00
 * Generated source version: 3.2.11
 *
 */
@WebService(targetNamespace = "http://ws.seas", name = "SeasServicePortType")
@XmlSeeAlso({ObjectFactory.class})
public interface SeasServicePortType {

    @WebMethod
    @RequestWrapper(localName = "query", targetNamespace = "http://ws.seas", className = "com.dcits.ws.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.QueryResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String query(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0,
        @WebParam(name = "in1", targetNamespace = "http://ws.seas")
        java.lang.String in1,
        @WebParam(name = "in2", targetNamespace = "http://ws.seas")
        int in2,
        @WebParam(name = "in3", targetNamespace = "http://ws.seas")
        int in3
    );

    @WebMethod
    @RequestWrapper(localName = "listLib", targetNamespace = "http://ws.seas", className = "com.dcits.ws.ListLib")
    @ResponseWrapper(localName = "listLibResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.ListLibResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String listLib();

    @WebMethod
    @RequestWrapper(localName = "queryIndexSearch", targetNamespace = "http://ws.seas", className = "com.dcits.ws.QueryIndexSearch")
    @ResponseWrapper(localName = "queryIndexSearchResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.QueryIndexSearchResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String queryIndexSearch(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0,
        @WebParam(name = "in1", targetNamespace = "http://ws.seas")
        java.lang.String in1,
        @WebParam(name = "in2", targetNamespace = "http://ws.seas")
        java.lang.String in2,
        @WebParam(name = "in3", targetNamespace = "http://ws.seas")
        java.lang.String in3,
        @WebParam(name = "in4", targetNamespace = "http://ws.seas")
        int in4,
        @WebParam(name = "in5", targetNamespace = "http://ws.seas")
        int in5
    );

    @WebMethod
    @RequestWrapper(localName = "login", targetNamespace = "http://ws.seas", className = "com.dcits.ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.LoginResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String login(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0,
        @WebParam(name = "in1", targetNamespace = "http://ws.seas")
        java.lang.String in1
    );

    @WebMethod
    @RequestWrapper(localName = "query1", targetNamespace = "http://ws.seas", className = "com.dcits.ws.Query1")
    @ResponseWrapper(localName = "query1Response", targetNamespace = "http://ws.seas", className = "com.dcits.ws.Query1Response")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String query1(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0,
        @WebParam(name = "in1", targetNamespace = "http://ws.seas")
        java.lang.String in1,
        @WebParam(name = "in2", targetNamespace = "http://ws.seas")
        java.lang.String in2,
        @WebParam(name = "in3", targetNamespace = "http://ws.seas")
        int in3,
        @WebParam(name = "in4", targetNamespace = "http://ws.seas")
        int in4
    );

    @WebMethod
    @RequestWrapper(localName = "archive", targetNamespace = "http://ws.seas", className = "com.dcits.ws.Archive")
    @ResponseWrapper(localName = "archiveResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.ArchiveResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String archive(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0,
        @WebParam(name = "in1", targetNamespace = "http://ws.seas")
        java.lang.String in1
    );

    @WebMethod
    @RequestWrapper(localName = "echo", targetNamespace = "http://ws.seas", className = "com.dcits.ws.Echo")
    @ResponseWrapper(localName = "echoResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.EchoResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String echo(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0
    );

    @WebMethod
    @RequestWrapper(localName = "getTypes", targetNamespace = "http://ws.seas", className = "com.dcits.ws.GetTypes")
    @ResponseWrapper(localName = "getTypesResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.GetTypesResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String getTypes(
        @WebParam(name = "in0", targetNamespace = "http://ws.seas")
        java.lang.String in0
    );

    @WebMethod
    @RequestWrapper(localName = "checkState", targetNamespace = "http://ws.seas", className = "com.dcits.ws.CheckState")
    @ResponseWrapper(localName = "checkStateResponse", targetNamespace = "http://ws.seas", className = "com.dcits.ws.CheckStateResponse")
    @WebResult(name = "out", targetNamespace = "http://ws.seas")
    public java.lang.String checkState();
}
